# devops/azure-pipelines/api/api-cd-dev.yml
# This file contains the pipeline definition for deploying the API to the DEV environment.
trigger:
  branches:
    include:
      - dev
  paths:
    include:
      - src/api/**

pr: none

variables:
  - group: AzureServiceConnectionDev

pool:
  vmImage: ubuntu-24.04

jobs:
  - job: deploy_api
    displayName: "Deploy API to DEV"
    steps:
      # 1. Authenticate and initialize Terraform
      - template: ../templates/terragrunt_init.yml
        parameters:
          subscription: $(SERVICE_CONNECTION_NAME_ARM_DEV)
      
      # # 2. Initialize Terraform (ensure the backend is configured)
      # - bash: |
      #     echo "Changing to directory: $(System.DefaultWorkingDirectory)/infrastructure/envs/dev/app_services/api"
      #     cd "$(System.DefaultWorkingDirectory)/infrastructure/envs/dev/app_services/api"
      #     terragrunt init -reconfigure
      #   displayName: "Initialize Terraform Backend"

      # 3. Fetch App Service Name using template
      - template: ../templates/fetch_app_service_name.yml
        parameters:
          terragrunt_path: infrastructure/envs/dev/app_services/api

      # 4. Build and publish the API
      - task: DotNetCoreCLI@2
        displayName: 'Build .NET Solution'
        inputs:
          command: 'build'
          projects: 'src/api/TheFullStackTeam.Backend.sln'
          arguments: '--configuration Release'
          workingDirectory: '$(System.DefaultWorkingDirectory)/src/api'

      # 5. Deploy API to App Service
      - task: AzureWebApp@1
        displayName: "Deploy API to App Service"
        inputs:
          azureSubscription: $(SERVICE_CONNECTION_NAME_ARM_DEV)
          appType: 'webApp'
          appName: $(APP_SERVICE_NAME)
          package: '$(Build.ArtifactStagingDirectory)'
