# .github/workflows/api-dev-cd.yml
# GitHub Actions workflow to deploy the API in the DEV environment
name: Deploy API to DEV

on:
  push:
    branches:
      - dev
    paths:
      - 'src/api/**'
# Add a manual trigger
  workflow_dispatch:   

jobs:
  deploy_api:
    name: Deploy API to DEV
    runs-on: ubuntu-latest
    environment: dev

    steps:
      # 1. Checkout the code
      - name: Checkout code
        uses: actions/checkout@v3
      
      - name: Check terragrunt HCL
        uses: gruntwork-io/terragrunt-action@v2
        with:
          tg_version: 0.69.0
          tg_command: "hclfmt --terragrunt-check --terragrunt-diff"
          tg_dir: "infrastructure/envs/dev/app_services/api"
          tf_version: 1.4.6

      # # 2. Set up Azure authentication
      # - name: Login to Azure
      #   uses: azure/login@v1       
      #   with:
      #     creds : ${{ secrets.AZURE_CREDENTIALS_DEV }}
      

      # # 3. Initialize Terragrunt dependencies
      # - name: Initialize Terragrunt dependencies
      #   run: |
      #     echo "Initializing Terragrunt dependencies"         
      #     terragrunt init --terragrunt-non-interactive
      #   working-directory: infrastructure/envs/dev/app_services/api
      #   env:
      #     ARM_SUBSCRIPTION_ID: ${{ secrets.ARM_SUBSCRIPTION_ID }}
      #     ARM_CLIENT_ID: ${{ secrets.ARM_CLIENT_ID }}
      #     ARM_CLIENT_SECRET: ${{ secrets.ARM_CLIENT_SECRET }}
      #     ARM_TENANT_ID: ${{ secrets.ARM_TENANT_ID }}

      # 4. Fetch App Service Name
      - name: Fetch App Service Name
        run: |
          echo "Fetching App Service Name"          
          APP_SERVICE_NAME=$(terragrunt output -json | jq -r '.name.value')
          echo "APP_SERVICE_NAME=$APP_SERVICE_NAME" >> $GITHUB_ENV
          if [ -z "$APP_SERVICE_NAME" ]; then
            echo "Error: APP_SERVICE_NAME is empty. Check Terraform outputs."
            exit 1
          fi
        working-directory: infrastructure/envs/dev/app_services/api
        env:
          ARM_SUBSCRIPTION_ID: ${{ secrets.ARM_SUBSCRIPTION_ID }}
          ARM_CLIENT_ID: ${{ secrets.ARM_CLIENT_ID }}
          ARM_CLIENT_SECRET: ${{ secrets.ARM_CLIENT_SECRET }}
          ARM_TENANT_ID: ${{ secrets.ARM_TENANT_ID }}

      # 5. Publish .NET Solution
      - name: Publish .NET Solution
        run: |
          dotnet publish src/api/TheFullStackTeam.Backend.sln \
            --configuration Release \
            --output $GITHUB_WORKSPACE/artifacts
        env:
          DOTNET_ROOT: /usr/share/dotnet

      # 6. Verify Artifact Directory
      - name: List Artifact Directory
        run: |
          echo "Contents of artifact directory:"
          ls -al $GITHUB_WORKSPACE/artifacts

      # 7. Deploy API to Azure App Service
      - name: Deploy to Azure App Service
        uses: azure/webapps-deploy@v2
        with:
          app-name: ${{ env.APP_SERVICE_NAME }}
          slot-name: production
          package: ${{ github.workspace }}/artifacts/TheFullStackTeam.API.zip

